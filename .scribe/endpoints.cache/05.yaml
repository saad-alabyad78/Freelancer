## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Freelancer Managment'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/{freelancer_id}'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Freelancer .'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      freelancer_id:
        name: freelancer_id
        description: 'The ID of the freelancer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      freelancer_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"profile_image_url":null,"background_image_url":null,"username":null,"headline":null,"description":null,"city":null,"date_of_birth":null,"gender":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/freelancer/store
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store New Freelancer .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      profile_image:
        name: profile_image
        description: 'Must be an image. Must not be greater than 2000 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      background_image:
        name: background_image
        description: 'Must be an image. Must not be greater than 2000 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      headline:
        name: headline
        description: 'Must be at least 20 characters. Must not be greater than 200 characters.'
        required: true
        example: hq
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must be at least 60 characters. Must not be greater than 4000 characters.'
        required: true
        example: 'Hic enim officiis excepturi commodi.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'this must be a syrian city.'
        required: true
        example: دمشق
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: female
        type: string
        enumValues:
          - male
          - female
        exampleWasSpecified: false
        custom: []
      date_of_birth:
        name: date_of_birth
        description: 'Must be a valid date. Must be a date before or equal to <code>2008-06-01</code>.'
        required: true
        example: '1997-05-29'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      job_role_id:
        name: job_role_id
        description: ''
        required: true
        example: quod
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      skills:
        name: skills
        description: ''
        required: false
        example:
          - et
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      headline: hq
      description: 'Hic enim officiis excepturi commodi.'
      city: دمشق
      gender: female
      date_of_birth: '1997-05-29'
      job_role_id: quod
      skills:
        - et
    fileParameters:
      profile_image: null
      background_image: null
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"profile_image_url":null,"background_image_url":null,"username":null,"headline":null,"description":null,"city":null,"date_of_birth":null,"gender":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8ga6ve1f56dZPbc3DEakV4h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/freelancer
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Freelancer .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      headline:
        name: headline
        description: 'Must be at least 20 characters. Must not be greater than 200 characters.'
        required: false
        example: t
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must be at least 60 characters. Must not be greater than 4000 characters.'
        required: false
        example: 'Facere voluptate voluptas nam incidunt error facilis.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'this must be a syrian city.'
        required: false
        example: دمشق
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: ''
        required: false
        example: male
        type: string
        enumValues:
          - male
          - female
        exampleWasSpecified: false
        custom: []
      date_of_birth:
        name: date_of_birth
        description: 'Must be a valid date. Must be a date before or equal to <code>2008-06-01</code>.'
        required: false
        example: '2000-02-09'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      job_role_id:
        name: job_role_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      skills:
        name: skills
        description: ''
        required: false
        example:
          - non
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      headline: t
      description: 'Facere voluptate voluptas nam incidunt error facilis.'
      city: دمشق
      gender: male
      date_of_birth: '2000-02-09'
      skills:
        - non
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"profile_image_url":null,"background_image_url":null,"username":null,"headline":null,"description":null,"city":null,"date_of_birth":null,"gender":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5ce4kv8dh3Z6fPaaEDb6Vg1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/freelancer/image/profile
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'create/update profile image'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      image:
        name: image
        description: 'Must be an image. Must not be greater than 2000 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a54h3dVPfDvcbEe16Z86gak'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/freelancer/image/background
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'create/update background image'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      image:
        name: image
        description: 'Must be an image. Must not be greater than 2000 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5b6d8aP4hk1DZgEv3c6faVe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/freelancer/image/profile
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'delete profile image'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5ekEVc14dg6v6f83aZhDbPa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/freelancer/image/background
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'delete background image'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6afe64ZEPhDadb5kgV8v1c3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/portfolio/{portfolio_id}'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Portfolio .'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      portfolio_id:
        name: portfolio_id
        description: 'The ID of the portfolio.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      portfolio_id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"title":null,"url":null,"date":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/freelancer/portfolio/store
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store New Portfolio .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: true
        example: oinelxpudpisxqye
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      url:
        name: url
        description: 'Must match the regex /\b(?:https?|ftp):\/\/[a-zA-Z0-9-.]+\.[a-zA-Z]{2,}(?:\/\S*)?\b/.'
        required: false
        example: 'b:https://n.N{2,}b'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: false
        example: '2024-06-01T18:08:50'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must be at least 20 characters.'
        required: true
        example: 'Labore ipsa et atque.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      files:
        name: files
        description: 'Must be a file. Must not be greater than 10240 kilobytes.'
        required: true
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      images:
        name: images
        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
        required: true
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      skills:
        name: skills
        description: ''
        required: false
        example:
          - soluta
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: oinelxpudpisxqye
      url: 'b:https://n.N{2,}b'
      date: '2024-06-01T18:08:50'
      description: 'Labore ipsa et atque.'
      skills:
        - soluta
    fileParameters:
      files:
        - null
      images:
        - null
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"title":null,"url":null,"date":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aDb8egEv36k4hPZdV516cfa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/freelancer/portfolio
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Portfolio .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      portfolio_id:
        name: portfolio_id
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      title:
        name: title
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: false
        example: qluzqg
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      url:
        name: url
        description: 'Must match the regex /\b(?:https?|ftp):\/\/[a-zA-Z0-9-.]+\.[a-zA-Z]{2,}(?:\/\S*)?\b/.'
        required: false
        example: 'bftp://MdF.C{2,}:/Sb'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: false
        example: '2024-06-01T18:08:50'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must be at least 20 characters.'
        required: false
        example: 'Quaerat ab cupiditate et velit.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      portfolio_id: qui
      title: qluzqg
      url: 'bftp://MdF.C{2,}:/Sb'
      date: '2024-06-01T18:08:50'
      description: 'Quaerat ab cupiditate et velit.'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"title":null,"url":null,"date":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bV6vfagZ4e1538DkhPc6aEd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/freelancer/portfolio
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Portfolio.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      portfolio_id:
        name: portfolio_id
        description: ''
        required: true
        example: doloremque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      portfolio_id: doloremque
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vfc36kVaeE4hb1g6a8DZ5Pd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/freelancer/portfolio/file/create
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Store/Update New Portfolio's File ."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'Must be a file. Must not be greater than 10240 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      portfolio_id:
        name: portfolio_id
        description: ''
        required: true
        example: tempore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      portfolio_id: tempore
    fileParameters:
      file: null
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"title":null,"url":null,"date":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kd6635ghaDevacEfZP418Vb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/freelancer/portfolio/file
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Delete New Portfolio's File ."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      portfolio_id:
        name: portfolio_id
        description: ''
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      file_id:
        name: file_id
        description: ''
        required: true
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      portfolio_id: enim
      file_id: eum
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PfcE466DgvaZ3Vd8h1b5eka'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/freelancer/portfolio/image/create
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Store/Update New Portfolio's Image ."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      image:
        name: image
        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      portfolio_id:
        name: portfolio_id
        description: ''
        required: true
        example: tempora
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      portfolio_id: tempora
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"title":null,"url":null,"date":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PavZkfhg6Da1346e8b5dEVc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/freelancer/portfolio/image
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Store/Update New Portfolio's File ."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      portfolio_id:
        name: portfolio_id
        description: ''
        required: true
        example: maxime
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image_id:
        name: image_id
        description: ''
        required: true
        example: minus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      portfolio_id: maxime
      image_id: minus
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6D8d3kV6ZPcv4a51eahgEfb'
    controller: null
    method: null
    route: null
    custom: []
