## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Chat Management'
description: |-

  APIs for managing chat conversations and messages
endpoints:
  -
    httpMethods:
      - POST
    uri: api/conversations
    metadata:
      groupName: 'Chat Management'
      groupDescription: |-

        APIs for managing chat conversations and messages
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new conversation.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The ID of the user to start a conversation with.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      user_id: 2
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Conversation already exists",
              "conversation_id": 1,
              "participants": [...],
              "other_user": {
                  "id": 2,
                  "name": "John Doe",
                  "avatar": "avatar_url",
                  "is_online": true,
                  "last_seen": "2024-08-11 12:34:56"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
              "message": "Conversation created successfully",
              "conversation_id": 1,
              "participants": [...],
              "other_user": {
                  "id": 2,
                  "name": "John Doe",
                  "avatar": "avatar_url",
                  "is_online": true,
                  "last_seen": "2024-08-11 12:34:56"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
              "message": "Cannot create a conversation with yourself"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "User not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer caE6d1Z4fDbP68Vhakv3eg5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/conversations/{conversationId}/messages'
    metadata:
      groupName: 'Chat Management'
      groupDescription: |-

        APIs for managing chat conversations and messages
      subgroup: ''
      subgroupDescription: ''
      title: 'Send a message in a conversation.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      conversationId:
        name: conversationId
        description: 'The ID of the conversation.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      conversationId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      message:
        name: message
        description: 'The content of the message.'
        required: false
        example: Hello
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      image:
        name: image
        description: 'The image file to be sent as a message.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_id:
        name: parent_id
        description: 'The ID of the parent message if replying to a specific message.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      message: Hello
      parent_id: 1
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: |-
          {
              "id": 1,
              "conversation_id": 1,
              "user_id": 1,
              "message": "Hello",
              "parent_id": null,
              "image": null,
              "created_at": "2021-01-01T00:00:00.000000Z",
              "updated_at": "2021-01-01T00:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You are banned from this conversation"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You are not a participant in this conversation"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fEdZ4Pace3bv6ga1D6V85kh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/conversations/{conversationId}/messages'
    metadata:
      groupName: 'Chat Management'
      groupDescription: |-

        APIs for managing chat conversations and messages
      subgroup: ''
      subgroupDescription: ''
      title: 'Get messages from a conversation.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      conversationId:
        name: conversationId
        description: 'The ID of the conversation.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      conversationId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": [
                  {
                      "id": 1,
                      "conversation_id": 1,
                      "user_id": 1,
                      "message": "Hello",
                      "parent_id": null,
                      "image": null,
                      "created_at": "2021-01-01T00:00:00.000000Z",
                      "updated_at": "2021-01-01T00:00:00.000000Z"
                  },
                  // المزيد من الرسائل
              ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You are not a participant in this conversation"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P6fg38vZc1b6e4ahdDaEV5k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/conversations/{conversationId}/messages/{messageId}'
    metadata:
      groupName: 'Chat Management'
      groupDescription: |-

        APIs for managing chat conversations and messages
      subgroup: ''
      subgroupDescription: ''
      title: 'Get messages from a specific message in a conversation.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      conversationId:
        name: conversationId
        description: 'The ID of the conversation.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      messageId:
        name: messageId
        description: 'The ID of the message.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      conversationId: 1
      messageId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": [
                  {
                      "id": 1,
                      "conversation_id": 1,
                      "user_id": 1,
                      "message": "Hello",
                      "parent_id": null,
                      "image": null,
                      "created_at": "2021-01-01T00:00:00.000000Z",
                      "updated_at": "2021-01-01T00:00:00.000000Z"
                  },
                  // المزيد من الرسائل
              ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "message": "You are not a participant in this conversation"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 36kv5Z1fcbeVdD4gaEPh6a8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/conversations
    metadata:
      groupName: 'Chat Management'
      groupDescription: |-

        APIs for managing chat conversations and messages
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all conversations for the authenticated user with the latest message and participant details.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": [
                  {
                      "id": 1,
                      "participant": {
                          "id": 2,
                          "name": "John Doe",
                          "avatar": "avatar_url"
                      },
                      "last_message": {
                          "message": "Hello, how are you?",
                          "created_at": "2024-08-11T12:34:56.000000Z"
                      },
                      "created_at": "2021-01-01T00:00:00.000000Z",
                      "updated_at": "2021-01-01T00:00:00.000000Z"
                  },
                  // المزيد من المحادثات
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dE8D5aZ4VP1vg366kfeahcb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/messages/{message}/like'
    metadata:
      groupName: 'Chat Management'
      groupDescription: |-

        APIs for managing chat conversations and messages
      subgroup: ''
      subgroupDescription: ''
      title: 'Like a message in a conversation.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      message:
        name: message
        description: 'The message.'
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      messageId:
        name: messageId
        description: 'The ID of the message to be liked.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      message: ut
      messageId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Message liked successfully",
              "like": { ... }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b385E6d64afevkPghaD1cVZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/conversations/{conversationId}/ban/{userId}'
    metadata:
      groupName: 'Chat Management'
      groupDescription: |-

        APIs for managing chat conversations and messages
      subgroup: ''
      subgroupDescription: ''
      title: 'Ban a user from a conversation.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      conversationId:
        name: conversationId
        description: 'The ID of the conversation.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      userId:
        name: userId
        description: 'The ID of the user to be banned.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      conversationId: 1
      userId: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "User banned successfully",
              "ban": { ... }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "User not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hav8acb3EZ566kD41eVfgdP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/conversations/{conversationId}/unban/{userId}'
    metadata:
      groupName: 'Chat Management'
      groupDescription: |-

        APIs for managing chat conversations and messages
      subgroup: ''
      subgroupDescription: ''
      title: 'Unban a user from a conversation.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      conversationId:
        name: conversationId
        description: 'The ID of the conversation.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      userId:
        name: userId
        description: 'The ID of the user to be unbanned.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      conversationId: 1
      userId: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "User unbanned successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k835Zvh4ed1VDcEgb66afaP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/user/{userId}/status'
    metadata:
      groupName: 'Chat Management'
      groupDescription: |-

        APIs for managing chat conversations and messages
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the online status and last seen time of a user by their ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: 'The ID of the user.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      userId: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "online": true,
              "last_seen": "2021-01-01T00:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer c3Vh1a5k8efaZvbE6Pd64gD'
    controller: null
    method: null
    route: null
    custom: []
