## Autogenerated by Scribe. DO NOT MODIFY.

name: Products
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: List
      description: 'list of products'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"name":"Product 1","description":"This is the description for product 1.","price":1000,"mine_as_client":null,"image":{"id":1,"url":"https:\/\/example.com\/images\/image_1.png"},"clients_count":0,"freelancer_id":null,"images":null,"files":null,"created_at":"2024-08-16T12:44:18.000000Z","updated_at":"2024-08-16T12:44:18.000000Z","deleted_at":null},{"id":2,"name":"Product 2","description":"This is the description for product 2.","price":1500,"mine_as_client":null,"image":{"id":2,"url":"https:\/\/example.com\/images\/image_2.jpg"},"clients_count":0,"freelancer_id":null,"images":null,"files":null,"created_at":"2024-08-16T12:44:18.000000Z","updated_at":"2024-08-16T12:44:18.000000Z","deleted_at":null}],"links":{"first":"http:\/\/localhost\/api\/products?page=1","last":"http:\/\/localhost\/api\/products?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/products?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/products","per_page":20,"to":2,"total":2}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '47'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/{product_id}/show'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Show
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      product_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"name":"Product 1","description":"This is the description for product 1.","price":1000,"mine_as_client":null,"image":{"id":1,"url":"https:\/\/example.com\/images\/image_1.png"},"clients_count":0,"freelancer_id":null,"images":[],"files":null,"created_at":"2024-08-16T12:44:18.000000Z","updated_at":"2024-08-16T12:44:18.000000Z","deleted_at":null}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '46'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create or Store'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: tixmqigpwulevyweozggrvh
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: 'Earum et sunt expedita modi enim enim.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image_id:
        name: image_id
        description: ''
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image_ids:
        name: image_ids
        description: 'Must not be greater than 2048.'
        required: true
        example:
          - 16
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      file_ids:
        name: file_ids
        description: ''
        required: true
        example:
          - 16
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: tixmqigpwulevyweozggrvh
      description: 'Earum et sunt expedita modi enim enim.'
      price: 14
      image_id: 13
      image_ids:
        - 16
      file_ids:
        - 16
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3ac6gPbav84h1kV65eEdDZf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/products/{product_id}'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Update
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      product_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: izlroazifysqtfx
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Quo qui dolor nihil laudantium qui.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      price:
        name: price
        description: ''
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image_id:
        name: image_id
        description: ''
        required: false
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image_ids:
        name: image_ids
        description: 'Must not be greater than 2048.'
        required: false
        example:
          - 24
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      file_ids:
        name: file_ids
        description: ''
        required: false
        example:
          - 12
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: izlroazifysqtfx
      description: 'Quo qui dolor nihil laudantium qui.'
      price: 10
      image_id: 12
      image_ids:
        - 24
      file_ids:
        - 12
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P5Z4kVfD3bcd8ga16Ee6ahv'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{product_id}'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: dalete
      description: |-
        if the freelancer deleted
        it will still be present in client account
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      product_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aDhk5bavE4Z1Ve386gPdc6f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/products/{product_id}/buy'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Buy Product'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      product_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cahP3fVd6E4b8Zv6Dg1e5ka'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/products/my-products
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'My products'
      description: 'for freelancer or for client'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a645vEgde1DfhZ68kacVb3P'
    controller: null
    method: null
    route: null
    custom: []
