## Autogenerated by Scribe. DO NOT MODIFY.

name: 'JobOffer-Proposal Management'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/job-offer-proposal/store
    metadata:
      groupName: 'JobOffer-Proposal Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Propose | Create (freelancer)'
      description: 'Store a newly created job offer proposal.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      job_offer_id:
        name: job_offer_id
        description: ''
        required: true
        example: iure
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      message:
        name: message
        description: 'Must not be greater than 255 characters.'
        required: true
        example: dxoftuwcgxrawioe
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      job_offer_id: iure
      message: dxoftuwcgxrawioe
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cavh5P6ge61ZVk4db8DEfa3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/job-offer-proposal
    metadata:
      groupName: 'JobOffer-Proposal Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update (freelancer).'
      description: |-
        freelancer update the proposal message
        but that does not updates the date of it
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      job_offer_proposal_id:
        name: job_offer_proposal_id
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      message:
        name: message
        description: 'Must not be greater than 255 characters.'
        required: true
        example: obmc
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      job_offer_proposal_id: qui
      message: obmc
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a8vg65fD1cVedh3Z4Pba6Ek'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/job-offer-proposal/{jobOfferProposal_id}'
    metadata:
      groupName: 'JobOffer-Proposal Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete | Cancel (freelancer).'
      description: 'freelancer delete the proposal'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      jobOfferProposal_id:
        name: jobOfferProposal_id
        description: 'The ID of the jobOfferProposal.'
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      jobOfferProposal_id: 13
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P5c8Dfa6bvd463eVZakhE1g'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/job-offer-proposal/index
    metadata:
      groupName: 'JobOffer-Proposal Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display list (freelancer)'
      description: |-
        display a listing of proposals .
        for the freelancer
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer f6Vcg5vZD41a3bPdheE86ka'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/job-offer-proposal/reject
    metadata:
      groupName: 'JobOffer-Proposal Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reject (company)'
      description: |-
        reject one or more job offer proposals.

        company reject one or more proposals
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      job_offer_proposal_ids:
        name: job_offer_proposal_ids
        description: ''
        required: true
        example:
          - quibusdam
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      job_offer_proposal_ids:
        - quibusdam
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8h6Zdkvc3D16aEba4fVg5eP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/job-offer-proposal/accept/{jobOfferProposal_id}'
    metadata:
      groupName: 'JobOffer-Proposal Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Accept (company)'
      description: |-
        accept a job offer proposal.

        company accepts the proposal
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      jobOfferProposal_id:
        name: jobOfferProposal_id
        description: 'The ID of the jobOfferProposal.'
        required: true
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      jobOfferProposal_id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d5bae6v836hDZ4fV1cEagkP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/job-offer-proposal/filter
    metadata:
      groupName: 'JobOffer-Proposal Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Filter (company)'
      description: 'filter job offer proposal based on job offer id and sort them by created date.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      job_offer_id:
        name: job_offer_id
        description: ''
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      order:
        name: order
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      job_offer_id: 16
      order: desc
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dagVc65fhbPvZEke68Da431'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/job-offer-proposal/{jobOfferProposal_id}'
    metadata:
      groupName: 'JobOffer-Proposal Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display one (company|freelancer).'
      description: 'company or freelancer can see the proposal'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      jobOfferProposal_id:
        name: jobOfferProposal_id
        description: 'The ID of the jobOfferProposal.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      jobOfferProposal_id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3Z15aDh4kcVgv68deEbf6Pa'
    controller: null
    method: null
    route: null
    custom: []
