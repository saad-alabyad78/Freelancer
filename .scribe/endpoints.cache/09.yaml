## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Freelancer Managment'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/{freelancer_id}'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Freelancer .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      freelancer_id:
        name: freelancer_id
        description: 'The ID of the freelancer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      freelancer_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"profile_image_url":null,"background_image_url":null,"username":null,"headline":null,"description":null,"city":null,"date_of_birth":null,"age":0,"gender":null,"user":null,"job_role":null,"skills":null,"portfolios":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cvd6fgZ5ekPVEb386ha1a4D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/freelancer/store
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store New Freelancer .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      profile_image_id:
        name: profile_image_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      background_image_id:
        name: background_image_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      headline:
        name: headline
        description: 'Must be at least 20 characters. Must not be greater than 200 characters.'
        required: true
        example: ousgzqccb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must be at least 10 characters. Must not be greater than 4000 characters.'
        required: true
        example: 'Assumenda suscipit eligendi iusto cum.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'this must be a syrian city.'
        required: true
        example: دمشق
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: male
        type: string
        enumValues:
          - male
          - female
        exampleWasSpecified: false
        custom: []
      date_of_birth:
        name: date_of_birth
        description: 'Must be a valid date. Must be a date before or equal to <code>2008-08-16</code>.'
        required: true
        example: '2006-04-10'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      job_role_id:
        name: job_role_id
        description: ''
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      skill_ids:
        name: skill_ids
        description: ''
        required: true
        example:
          - 7
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      headline: ousgzqccb
      description: 'Assumenda suscipit eligendi iusto cum.'
      city: دمشق
      gender: male
      date_of_birth: '2006-04-10'
      job_role_id: 1
      skill_ids:
        - 7
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"profile_image_url":null,"background_image_url":null,"username":null,"headline":null,"description":null,"city":null,"date_of_birth":null,"age":0,"gender":null,"user":null,"job_role":null,"skills":null,"portfolios":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 45k83chaPZ6gfDEed16avVb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/freelancer
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'update Freelancer .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      profile_image_id:
        name: profile_image_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      background_image_id:
        name: background_image_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      headline:
        name: headline
        description: 'Must be at least 20 characters. Must not be greater than 200 characters.'
        required: false
        example: nyqnqqpfcdeoqqlxgauqrlb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must be at least 60 characters. Must not be greater than 4000 characters.'
        required: false
        example: 'Cupiditate quisquam enim necessitatibus quas et quod.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'this must be a syrian city.'
        required: false
        example: دمشق
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: ''
        required: false
        example: female
        type: string
        enumValues:
          - male
          - female
        exampleWasSpecified: false
        custom: []
      date_of_birth:
        name: date_of_birth
        description: 'Must be a valid date. Must be a date before or equal to <code>2008-08-16</code>.'
        required: false
        example: '2005-06-08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      job_role_id:
        name: job_role_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      skill_ids:
        name: skill_ids
        description: ''
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      headline: nyqnqqpfcdeoqqlxgauqrlb
      description: 'Cupiditate quisquam enim necessitatibus quas et quod.'
      city: دمشق
      gender: female
      date_of_birth: '2005-06-08'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"profile_image_url":null,"background_image_url":null,"username":null,"headline":null,"description":null,"city":null,"date_of_birth":null,"age":0,"gender":null,"user":null,"job_role":null,"skills":null,"portfolios":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ba584VhvkDa3dE6cP61egZf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/portfolio/{portfolio_id}'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Portfolio .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      portfolio_id:
        name: portfolio_id
        description: 'The ID of the portfolio.'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      portfolio_id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"title":null,"section":null,"views_count":null,"likes_count":null,"url":null,"date":null,"updated_at":null,"created_at":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4Z1Vah6Ddk6bveac8P5g3Ef'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/freelancer/portfolio/store
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store New Portfolio .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: true
        example: nhqquumxupo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      url:
        name: url
        description: 'Must match the regex /\b(?:https?|ftp):\/\/[a-zA-Z0-9-.]+\.[a-zA-Z]{2,}(?:\/\S*)?\b/.'
        required: false
        example: 'b:https|ftp)://B.K{2,}b'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: false
        example: '2024-08-16T00:41:23'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must be at least 20 characters.'
        required: true
        example: 'Rem fugiat itaque officia.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      file_ids:
        name: file_ids
        description: ''
        required: true
        example:
          - 13
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image_ids:
        name: image_ids
        description: ''
        required: true
        example:
          - 13
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      skill_ids:
        name: skill_ids
        description: ''
        required: false
        example:
          - 20
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      section:
        name: section
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: true
        example: vcdwmnivlptny
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: nhqquumxupo
      url: 'b:https|ftp)://B.K{2,}b'
      date: '2024-08-16T00:41:23'
      description: 'Rem fugiat itaque officia.'
      file_ids:
        - 13
      image_ids:
        - 13
      skill_ids:
        - 20
      section: vcdwmnivlptny
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"title":null,"section":null,"views_count":null,"likes_count":null,"url":null,"date":null,"updated_at":null,"created_at":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PhdD3aag6654E1cVZbvekf8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/freelancer/portfolio
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Portfolio .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      portfolio_id:
        name: portfolio_id
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      title:
        name: title
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: false
        example: iim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      url:
        name: url
        description: 'Must match the regex /\b(?:https?|ftp):\/\/[a-zA-Z0-9-.]+\.[a-zA-Z]{2,}(?:\/\S*)?\b/.'
        required: false
        example: 'b:http|ftp)://-jxIq.H{2,}b'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: false
        example: '2024-08-16T00:41:23'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must be at least 20 characters.'
        required: false
        example: 'Corporis at magni iste ducimus.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      file_ids:
        name: file_ids
        description: ''
        required: true
        example:
          - quis
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image_ids:
        name: image_ids
        description: ''
        required: true
        example:
          - sit
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      skill_ids:
        name: skill_ids
        description: ''
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      section:
        name: section
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: false
        example: zdgjtphbvopk
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      portfolio_id: et
      title: iim
      url: 'b:http|ftp)://-jxIq.H{2,}b'
      date: '2024-08-16T00:41:23'
      description: 'Corporis at magni iste ducimus.'
      file_ids:
        - quis
      image_ids:
        - sit
      section: zdgjtphbvopk
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"title":null,"section":null,"views_count":null,"likes_count":null,"url":null,"date":null,"updated_at":null,"created_at":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5dk3VD4fcaE8Ph61a6gbevZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/freelancer/portfolio
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Portfolio.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      portfolio_id:
        name: portfolio_id
        description: ''
        required: true
        example: nemo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      portfolio_id: nemo
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Vgf3c5Eb6hePk6v1a84dDaZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/portfolio/{portfolio_id}/liked-by-me'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Liked By Me'
      description: 'return yes or no'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      portfolio_id:
        name: portfolio_id
        description: 'The ID of the portfolio.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      portfolio_id: 4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 35eE4Zak68bDd61PcahgfVv'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/portfolio/{portfolio_id}/like'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Like
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      portfolio_id:
        name: portfolio_id
        description: 'The ID of the portfolio.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      portfolio_id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k6dcEbfgv15V63ZaahPe4D8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/portfolio/{portfolio_id}/unlike'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: UnLike
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      portfolio_id:
        name: portfolio_id
        description: 'The ID of the portfolio.'
        required: true
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      portfolio_id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dea1fVZPhck5E364bvD6g8a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/portfolio/{portfolio_id}/view'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: View
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      portfolio_id:
        name: portfolio_id
        description: 'The ID of the portfolio.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      portfolio_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b1aeDav6hZc5dkf8P36g4EV'
    controller: null
    method: null
    route: null
    custom: []
