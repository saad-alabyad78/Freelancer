## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Chat Management'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/conversations
    metadata:
      groupName: 'Chat Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new conversation.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      user_id: quo
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PD68Zv63dgc5ak1b4VaehfE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/conversations/{conversationId}/messages'
    metadata:
      groupName: 'Chat Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send a message in a conversation.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      conversationId:
        name: conversationId
        description: ''
        required: true
        example: inventore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      conversationId: inventore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      message:
        name: message
        description: ''
        required: false
        example: voluptate
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image:
        name: image
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_id:
        name: parent_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      message: voluptate
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5dhD36Eb1Zgc8kaPaV6f4ev'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/conversations/{conversationId}/messages'
    metadata:
      groupName: 'Chat Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get messages from a conversation.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      conversationId:
        name: conversationId
        description: ''
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      conversationId: vel
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e6k15EcPfv48gZaab6h3dVD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/conversations/{conversationId}/messages/{messageId}'
    metadata:
      groupName: 'Chat Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get messages from a specific message in a conversation.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      conversationId:
        name: conversationId
        description: ''
        required: true
        example: culpa
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      messageId:
        name: messageId
        description: ''
        required: true
        example: quas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      conversationId: culpa
      messageId: quas
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gk3b1eZ6v8h45fEdcVaaD6P'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/conversations
    metadata:
      groupName: 'Chat Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all conversations for the authenticated user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v6V6fP1aDdceakb48g5ZE3h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/messages/{message}/like'
    metadata:
      groupName: 'Chat Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Like a message in a conversation.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      message:
        name: message
        description: 'The message.'
        required: true
        example: ipsa
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      message: ipsa
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 58d36V4ahaZE6v1PgckbfDe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/conversations/{conversationId}/ban/{userId}'
    metadata:
      groupName: 'Chat Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Ban a user from a conversation.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      conversationId:
        name: conversationId
        description: ''
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      userId:
        name: userId
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      conversationId: voluptas
      userId: est
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VceZbPE5hDk1dag8a46f36v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/conversations/{conversationId}/unban/{userId}'
    metadata:
      groupName: 'Chat Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Unban a user from a conversation.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      conversationId:
        name: conversationId
        description: ''
        required: true
        example: veniam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      userId:
        name: userId
        description: ''
        required: true
        example: deserunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      conversationId: veniam
      userId: deserunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 64vD8d5cg3fZhVaa1kPE6eb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/user/{userId}/status'
    metadata:
      groupName: 'Chat Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the online status and last seen time of a user by their ID.'
      description: "This method retrieves the 'online' status and 'last_seen' timestamp of the specified user."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      userId: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gb6VPf5Ea13ZDheacd864kv'
    controller: null
    method: null
    route: null
    custom: []
