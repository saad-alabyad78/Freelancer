name: 'Company Managment'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/company/{company_username}/job_offer/store/{industry_name}'
    metadata:
      groupName: 'Company Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'create job offer.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      company_username:
        name: company_username
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      industry_name:
        name: industry_name
        description: ''
        required: true
        example: برمجي
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      company_username: 16
      industry_name: برمجي
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: 'this must be a valid job offer type.'
        required: true
        example: 'full-time , part-time , remotely , on-site'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      max_salary:
        name: max_salary
        description: 'fields must be either together or none Must be at least 0. Must not be greater than 100000000.'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      min_salary:
        name: min_salary
        description: 'fields must be either together or none Must be at least 0. Must not be greater than 100000000.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      max_age:
        name: max_age
        description: 'fields must be either together or none Must be at least 18. Must not be greater than 60.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      min_age:
        name: min_age
        description: 'fields must be either together or none Must be at least 18. Must not be greater than 60.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      transportation:
        name: transportation
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      health_insurance:
        name: health_insurance
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      military_service:
        name: military_service
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: 'must be a male or female.'
        required: false
        example: male
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      decription:
        name: decription
        description: 'Must be at least 100 characters. Must not be greater than 40000 characters.'
        required: true
        example: ualkmpwrvtfyxtiisv
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      job_role:
        name: job_role
        description: ''
        required: true
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      skills:
        name: skills
        description: ''
        required: true
        example:
          - omnis
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      type: 'full-time , part-time , remotely , on-site'
      max_salary: 9
      min_salary: 7
      max_age: 15
      min_age: 2
      transportation: true
      health_insurance: false
      military_service: false
      gender: male
      decription: ualkmpwrvtfyxtiisv
      job_role: non
      skills:
        - omnis
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/company/{company_username}'
    metadata:
      groupName: 'Company Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the company.'
      description: 'Note: the user will be deleted'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      company_username:
        name: company_username
        description: ''
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      company_username: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      password:
        name: password
        description: ''
        required: true
        example: 'h?H$Jj'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      password: 'h?H$Jj'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/company/gallery
    metadata:
      groupName: 'Company Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get A Gallary Image'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      image:
        name: image
        description: ''
        required: true
        example: officia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      image: officia
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"The selected image is invalid.","errors":{"image":["The selected image is invalid."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/company/image/{company_username}/profile'
    metadata:
      groupName: 'Company Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      company_username:
        name: company_username
        description: ''
        required: true
        example: porro
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      company_username: porro
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      image:
        name: image
        description: 'Must be an image. Must not be greater than 2000 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/company/image/{company_username}/background'
    metadata:
      groupName: 'Company Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      company_username:
        name: company_username
        description: ''
        required: true
        example: earum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      company_username: earum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      image:
        name: image
        description: 'Must be an image. Must not be greater than 2000 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/company/image/{company_username}/profile'
    metadata:
      groupName: 'Company Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      company_username:
        name: company_username
        description: ''
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      company_username: dolorem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/company/image/{company_username}/background'
    metadata:
      groupName: 'Company Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      company_username:
        name: company_username
        description: ''
        required: true
        example: molestias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      company_username: molestias
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
