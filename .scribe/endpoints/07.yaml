name: 'Freelancer Managment'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/{freelancer_id}'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Freelancer .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      freelancer_id:
        name: freelancer_id
        description: 'The ID of the freelancer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      freelancer_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"profile_image_url":null,"background_image_url":null,"username":null,"headline":null,"description":null,"city":null,"date_of_birth":null,"gender":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 85Paghc6ZeaEdfkb461Dv3V'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/freelancer/store
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store New Freelancer .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      profile_image_id:
        name: profile_image_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      background_image_id:
        name: background_image_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      headline:
        name: headline
        description: 'Must be at least 20 characters. Must not be greater than 200 characters.'
        required: true
        example: xgvrlmffsdfddolvkpr
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must be at least 60 characters. Must not be greater than 4000 characters.'
        required: true
        example: 'Est rerum aut nobis soluta.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'this must be a syrian city.'
        required: true
        example: دمشق
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: female
        type: string
        enumValues:
          - male
          - female
        exampleWasSpecified: false
        custom: []
      date_of_birth:
        name: date_of_birth
        description: 'Must be a valid date. Must be a date before or equal to <code>2008-07-07</code>.'
        required: true
        example: '2006-11-17'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      job_role_id:
        name: job_role_id
        description: ''
        required: true
        example: error
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      skill_ids:
        name: skill_ids
        description: 'Must have at least 5 items. Must not have more than 50 items.'
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      skills_id:
        name: skills_id
        description: ''
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      headline: xgvrlmffsdfddolvkpr
      description: 'Est rerum aut nobis soluta.'
      city: دمشق
      gender: female
      date_of_birth: '2006-11-17'
      job_role_id: error
      skill_ids: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"profile_image_url":null,"background_image_url":null,"username":null,"headline":null,"description":null,"city":null,"date_of_birth":null,"gender":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PEa8kdD1bZvh6fea3V4cg65'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/freelancer
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'update Freelancer .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      profile_image_id:
        name: profile_image_id
        description: 'This field is required when <code>profile_image_url</code> is present.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      background_image_id:
        name: background_image_id
        description: 'This field is required when <code>background_image_id</code> is present.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      headline:
        name: headline
        description: 'Must be at least 20 characters. Must not be greater than 200 characters.'
        required: false
        example: gereruildjqhveiwbtum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must be at least 60 characters. Must not be greater than 4000 characters.'
        required: false
        example: 'Quas quod et alias.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'this must be a syrian city.'
        required: false
        example: دمشق
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: ''
        required: false
        example: female
        type: string
        enumValues:
          - male
          - female
        exampleWasSpecified: false
        custom: []
      date_of_birth:
        name: date_of_birth
        description: 'Must be a valid date. Must be a date before or equal to <code>2008-07-07</code>.'
        required: false
        example: '2003-04-23'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      job_role_id:
        name: job_role_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      skill_ids:
        name: skill_ids
        description: ''
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      headline: gereruildjqhveiwbtum
      description: 'Quas quod et alias.'
      city: دمشق
      gender: female
      date_of_birth: '2003-04-23'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"profile_image_url":null,"background_image_url":null,"username":null,"headline":null,"description":null,"city":null,"date_of_birth":null,"gender":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer f1ZaPE4Dedk5abV3g8c66hv'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/portfolio/{portfolio_id}'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Portfolio .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      portfolio_id:
        name: portfolio_id
        description: 'The ID of the portfolio.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      portfolio_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"title":null,"section":null,"views_count":null,"likes_count":null,"url":null,"date":null,"updated_at":null,"created_at":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cVkDPZev31fE4db6856aagh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/freelancer/portfolio/store
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store New Portfolio .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: true
        example: ahaatlanmunkedohjvgxkf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      url:
        name: url
        description: 'Must match the regex /\b(?:https?|ftp):\/\/[a-zA-Z0-9-.]+\.[a-zA-Z]{2,}(?:\/\S*)?\b/.'
        required: false
        example: 'bftp://dr3tA.m{2,}:/SSSS)b'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: false
        example: '2024-07-07T12:37:53'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must be at least 20 characters.'
        required: true
        example: 'Tenetur aliquid animi deleniti fugit.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      file_ids:
        name: file_ids
        description: ''
        required: true
        example:
          - 15
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image_ids:
        name: image_ids
        description: ''
        required: true
        example:
          - 6
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      skill_ids:
        name: skill_ids
        description: ''
        required: false
        example:
          - 14
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      section:
        name: section
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: true
        example: spzlssk
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: ahaatlanmunkedohjvgxkf
      url: 'bftp://dr3tA.m{2,}:/SSSS)b'
      date: '2024-07-07T12:37:53'
      description: 'Tenetur aliquid animi deleniti fugit.'
      file_ids:
        - 15
      image_ids:
        - 6
      skill_ids:
        - 14
      section: spzlssk
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"title":null,"section":null,"views_count":null,"likes_count":null,"url":null,"date":null,"updated_at":null,"created_at":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zke4gvbfPDch38a6a1dE6V5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/freelancer/portfolio
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Portfolio .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      portfolio_id:
        name: portfolio_id
        description: ''
        required: true
        example: doloremque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      title:
        name: title
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: false
        example: dtwekkxuxcilvkc
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      url:
        name: url
        description: 'Must match the regex /\b(?:https?|ftp):\/\/[a-zA-Z0-9-.]+\.[a-zA-Z]{2,}(?:\/\S*)?\b/.'
        required: false
        example: 'bftp://b.N{2,}:/)b'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: false
        example: '2024-07-07T12:37:53'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must be at least 20 characters.'
        required: false
        example: 'Aliquam est in esse amet voluptas itaque sed.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      file_ids:
        name: file_ids
        description: ''
        required: true
        example:
          - esse
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image_ids:
        name: image_ids
        description: ''
        required: true
        example:
          - est
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      skill_ids:
        name: skill_ids
        description: ''
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      section:
        name: section
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: false
        example: nehjy
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      portfolio_id: doloremque
      title: dtwekkxuxcilvkc
      url: 'bftp://b.N{2,}:/)b'
      date: '2024-07-07T12:37:53'
      description: 'Aliquam est in esse amet voluptas itaque sed.'
      file_ids:
        - esse
      image_ids:
        - est
      section: nehjy
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"title":null,"section":null,"views_count":null,"likes_count":null,"url":null,"date":null,"updated_at":null,"created_at":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gbeh41fca65DPVa8dEv6kZ3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/freelancer/portfolio
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Portfolio.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      portfolio_id:
        name: portfolio_id
        description: ''
        required: true
        example: sint
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      portfolio_id: sint
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ePd8fva361ZhEc6a4D5Vbkg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/portfolio/{portfolio_id}/liked-by-me'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Liked By Me'
      description: 'return yes or no'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      portfolio_id:
        name: portfolio_id
        description: 'The ID of the portfolio.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      portfolio_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vaVZhPDk8gbe63cE65f14da'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/portfolio/{portfolio_id}/like'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Like
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      portfolio_id:
        name: portfolio_id
        description: 'The ID of the portfolio.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      portfolio_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Eekd36c4gPaZfv856VDa1hb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/portfolio/{portfolio_id}/unlike'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: UnLike
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      portfolio_id:
        name: portfolio_id
        description: 'The ID of the portfolio.'
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      portfolio_id: 8
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a63cZkd8hVbPg1f4E65vaeD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/portfolio/{portfolio_id}/view'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: View
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      portfolio_id:
        name: portfolio_id
        description: 'The ID of the portfolio.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      portfolio_id: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ka4a6ZfVDvPd3be1E685ghc'
    controller: null
    method: null
    route: null
    custom: []
