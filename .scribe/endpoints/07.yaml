name: 'Freelancer Managment'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/{freelancer_id}'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Freelancer .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      freelancer_id:
        name: freelancer_id
        description: 'The ID of the freelancer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      freelancer_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"profile_image_url":null,"background_image_url":null,"username":null,"headline":null,"description":null,"city":null,"date_of_birth":null,"age":0,"gender":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DEgvVa568cZ4akd3Phb1f6e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/freelancer/store
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store New Freelancer .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      profile_image_id:
        name: profile_image_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      background_image_id:
        name: background_image_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      headline:
        name: headline
        description: 'Must be at least 20 characters. Must not be greater than 200 characters.'
        required: true
        example: zrwuhndgytbalmtpg
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must be at least 60 characters. Must not be greater than 4000 characters.'
        required: true
        example: 'Sint illum voluptatibus beatae illum.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'this must be a syrian city.'
        required: true
        example: دمشق
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: male
        type: string
        enumValues:
          - male
          - female
        exampleWasSpecified: false
        custom: []
      date_of_birth:
        name: date_of_birth
        description: 'Must be a valid date. Must be a date before or equal to <code>2008-07-26</code>.'
        required: true
        example: '2000-04-16'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      job_role_id:
        name: job_role_id
        description: ''
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      skill_ids:
        name: skill_ids
        description: ''
        required: true
        example:
          - 14
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      headline: zrwuhndgytbalmtpg
      description: 'Sint illum voluptatibus beatae illum.'
      city: دمشق
      gender: male
      date_of_birth: '2000-04-16'
      job_role_id: 13
      skill_ids:
        - 14
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"profile_image_url":null,"background_image_url":null,"username":null,"headline":null,"description":null,"city":null,"date_of_birth":null,"age":0,"gender":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Ea6ef1a8b3gP54ZDkd6cvhV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/freelancer
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'update Freelancer .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      profile_image_id:
        name: profile_image_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      background_image_id:
        name: background_image_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      headline:
        name: headline
        description: 'Must be at least 20 characters. Must not be greater than 200 characters.'
        required: false
        example: tjllrpountbww
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must be at least 60 characters. Must not be greater than 4000 characters.'
        required: false
        example: 'Et et ex velit aut corrupti.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'this must be a syrian city.'
        required: false
        example: دمشق
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gender:
        name: gender
        description: ''
        required: false
        example: male
        type: string
        enumValues:
          - male
          - female
        exampleWasSpecified: false
        custom: []
      date_of_birth:
        name: date_of_birth
        description: 'Must be a valid date. Must be a date before or equal to <code>2008-07-26</code>.'
        required: false
        example: '2006-11-07'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      job_role_id:
        name: job_role_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      skill_ids:
        name: skill_ids
        description: ''
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      headline: tjllrpountbww
      description: 'Et et ex velit aut corrupti.'
      city: دمشق
      gender: male
      date_of_birth: '2006-11-07'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"profile_image_url":null,"background_image_url":null,"username":null,"headline":null,"description":null,"city":null,"date_of_birth":null,"age":0,"gender":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4Dhfk6P5gcaEvV3ea61d8bZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/portfolio/{portfolio_id}'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Portfolio .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      portfolio_id:
        name: portfolio_id
        description: 'The ID of the portfolio.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      portfolio_id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"title":null,"section":null,"views_count":null,"likes_count":null,"url":null,"date":null,"updated_at":null,"created_at":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 56DkVeZ8dhgbEv1Pa6c34af'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/freelancer/portfolio/store
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store New Portfolio .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: true
        example: ytrbxo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      url:
        name: url
        description: 'Must match the regex /\b(?:https?|ftp):\/\/[a-zA-Z0-9-.]+\.[a-zA-Z]{2,}(?:\/\S*)?\b/.'
        required: false
        example: 'b:https|ftp)://r.M{2,}:/S)b'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: false
        example: '2024-07-26T21:42:38'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must be at least 20 characters.'
        required: true
        example: 'Rerum praesentium provident aut.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      file_ids:
        name: file_ids
        description: ''
        required: true
        example:
          - 1
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image_ids:
        name: image_ids
        description: ''
        required: true
        example:
          - 4
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      skill_ids:
        name: skill_ids
        description: ''
        required: false
        example:
          - 7
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      section:
        name: section
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: true
        example: br
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: ytrbxo
      url: 'b:https|ftp)://r.M{2,}:/S)b'
      date: '2024-07-26T21:42:38'
      description: 'Rerum praesentium provident aut.'
      file_ids:
        - 1
      image_ids:
        - 4
      skill_ids:
        - 7
      section: br
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"title":null,"section":null,"views_count":null,"likes_count":null,"url":null,"date":null,"updated_at":null,"created_at":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer g8PdVv5164ZahebkacEf6D3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/freelancer/portfolio
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Portfolio .'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      portfolio_id:
        name: portfolio_id
        description: ''
        required: true
        example: officia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      title:
        name: title
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: false
        example: w
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      url:
        name: url
        description: 'Must match the regex /\b(?:https?|ftp):\/\/[a-zA-Z0-9-.]+\.[a-zA-Z]{2,}(?:\/\S*)?\b/.'
        required: false
        example: 'b:https|ftp)://NmOOJ.t{2,}b'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: false
        example: '2024-07-26T21:42:38'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must be at least 20 characters.'
        required: false
        example: 'Nulla architecto adipisci et dolor in.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      file_ids:
        name: file_ids
        description: ''
        required: true
        example:
          - consequuntur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image_ids:
        name: image_ids
        description: ''
        required: true
        example:
          - in
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      skill_ids:
        name: skill_ids
        description: ''
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      section:
        name: section
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: false
        example: rvpbbtihdfefzi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      portfolio_id: officia
      title: w
      url: 'b:https|ftp)://NmOOJ.t{2,}b'
      date: '2024-07-26T21:42:38'
      description: 'Nulla architecto adipisci et dolor in.'
      file_ids:
        - consequuntur
      image_ids:
        - in
      section: rvpbbtihdfefzi
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"title":null,"section":null,"views_count":null,"likes_count":null,"url":null,"date":null,"updated_at":null,"created_at":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4d6Paabhek51v8c3gDVfZ6E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/freelancer/portfolio
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Portfolio.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      portfolio_id:
        name: portfolio_id
        description: ''
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      portfolio_id: autem
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aV4PE63kvfe81dh65gcabZD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/portfolio/{portfolio_id}/liked-by-me'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Liked By Me'
      description: 'return yes or no'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      portfolio_id:
        name: portfolio_id
        description: 'The ID of the portfolio.'
        required: true
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      portfolio_id: 14
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer abdZfkhVv83ea4cEPDg5661'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/portfolio/{portfolio_id}/like'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Like
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      portfolio_id:
        name: portfolio_id
        description: 'The ID of the portfolio.'
        required: true
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      portfolio_id: 14
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bEfV641ahc8gZPveak6D53d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/portfolio/{portfolio_id}/unlike'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: UnLike
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      portfolio_id:
        name: portfolio_id
        description: 'The ID of the portfolio.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      portfolio_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hfced1v58ZaPD6EkVbg436a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/freelancer/portfolio/{portfolio_id}/view'
    metadata:
      groupName: 'Freelancer Managment'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: View
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      portfolio_id:
        name: portfolio_id
        description: 'The ID of the portfolio.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      portfolio_id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6gabed4cfPhZ3E51V8k6avD'
    controller: null
    method: null
    route: null
    custom: []
